<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-3.2.xsd"
       default-lazy-init="true">
       
     
    <!-- Activates scanning of @component -->
    <context:component-scan base-package="com.ngnsoft.ngp.component"/>
    
    <!-- Activates scanning of @Service -->
    <context:component-scan base-package="com.ngnsoft.ngp.constant"/>
        
    <!-- Activates scanning of @Repository -->
    <context:component-scan base-package="com.ngnsoft.ngp.dao"/>
    
    <!-- Activates scanning of @Service -->
    <context:component-scan base-package="com.ngnsoft.ngp.service"/>
    
    <!-- Activates scanning of @component -->
    <context:component-scan base-package="com.ngnsoft.ngp.job"/>
    
    <context:property-placeholder location="classpath:jdbc.properties,classpath:page.properties,classpath:system-config.properties,classpath:redis.properties" />
    
    <bean id="ngpDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.ngp.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.ngp.url}"/>
		<property name="acquireIncrement" value="${jdbc.c3p0.acquireIncrement}"/>
		<property name="acquireRetryAttempts" value="${jdbc.c3p0.acquireRetryAttempts}"/>
		<property name="acquireRetryDelay" value="${jdbc.c3p0.acquireRetryDelay}"/>
		<property name="autoCommitOnClose" value="${jdbc.c3p0.autoCommitOnClose}"/>
		<property name="breakAfterAcquireFailure" value="${jdbc.c3p0.breakAfterAcquireFailure}"/>
		<property name="idleConnectionTestPeriod" value="${jdbc.c3p0.idleConnectionTestPeriod}"/>
		<property name="maxIdleTime" value="${jdbc.c3p0.maxIdleTime}"/>
		<property name="checkoutTimeout" value="${jdbc.c3p0.checkoutTimeout}"/>
		<property name="initialPoolSize" value="${jdbc.c3p0.initialPoolSize}"/>
		<property name="maxPoolSize" value="${jdbc.c3p0.maxPoolSize}"/>
		<property name="maxStatements" value="${jdbc.c3p0.maxStatements}"/>
		<property name="maxStatementsPerConnection" value="${jdbc.c3p0.maxStatementsPerConnection}"/>
		<property name="numHelperThreads" value="${jdbc.c3p0.numHelperThreads}"/>
		<property name="testConnectionOnCheckout" value="${jdbc.c3p0.testConnectionOnCheckout}"/>
		<property name="user" value="${jdbc.ngp.username}"/>
		<property name="password" value="${jdbc.ngp.password}"/>
    </bean>
    
    <!-- <bean id="userDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.ngp_user.driverClassName}"/>
        <property name="url" value="${jdbc.ngp_user.url}"/>
        <property name="username" value="${jdbc.ngp_user.username}"/>
        <property name="password" value="${jdbc.ngp_user.password}"/>
    </bean> -->
    
    <bean id="cocDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.coc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.coc.url}"/>
		<property name="acquireIncrement" value="${jdbc.c3p0.acquireIncrement}"/>
		<property name="acquireRetryAttempts" value="${jdbc.c3p0.acquireRetryAttempts}"/>
		<property name="acquireRetryDelay" value="${jdbc.c3p0.acquireRetryDelay}"/>
		<property name="autoCommitOnClose" value="${jdbc.c3p0.autoCommitOnClose}"/>
		<property name="breakAfterAcquireFailure" value="${jdbc.c3p0.breakAfterAcquireFailure}"/>
		<property name="idleConnectionTestPeriod" value="${jdbc.c3p0.idleConnectionTestPeriod}"/>
		<property name="maxIdleTime" value="${jdbc.c3p0.maxIdleTime}"/>
		<property name="checkoutTimeout" value="${jdbc.c3p0.checkoutTimeout}"/>
		<property name="initialPoolSize" value="${jdbc.c3p0.initialPoolSize}"/>
		<property name="maxPoolSize" value="${jdbc.c3p0.maxPoolSize}"/>
		<property name="maxStatements" value="${jdbc.c3p0.maxStatements}"/>
		<property name="maxStatementsPerConnection" value="${jdbc.c3p0.maxStatementsPerConnection}"/>
		<property name="numHelperThreads" value="${jdbc.c3p0.numHelperThreads}"/>
		<property name="testConnectionOnCheckout" value="${jdbc.c3p0.testConnectionOnCheckout}"/>
		<property name="user" value="${jdbc.coc.username}"/>
		<property name="password" value="${jdbc.coc.password}"/>
    </bean>
    
    
    <bean id="dragonDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.dragon.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.dragon.url}"/>
		<property name="acquireIncrement" value="${jdbc.c3p0.acquireIncrement}"/>
		<property name="acquireRetryAttempts" value="${jdbc.c3p0.acquireRetryAttempts}"/>
		<property name="acquireRetryDelay" value="${jdbc.c3p0.acquireRetryDelay}"/>
		<property name="autoCommitOnClose" value="${jdbc.c3p0.autoCommitOnClose}"/>
		<property name="breakAfterAcquireFailure" value="${jdbc.c3p0.breakAfterAcquireFailure}"/>
		<property name="idleConnectionTestPeriod" value="${jdbc.c3p0.idleConnectionTestPeriod}"/>
		<property name="maxIdleTime" value="${jdbc.c3p0.maxIdleTime}"/>
		<property name="checkoutTimeout" value="${jdbc.c3p0.checkoutTimeout}"/>
		<property name="initialPoolSize" value="${jdbc.c3p0.initialPoolSize}"/>
		<property name="maxPoolSize" value="${jdbc.c3p0.maxPoolSize}"/>
		<property name="maxStatements" value="${jdbc.c3p0.maxStatements}"/>
		<property name="maxStatementsPerConnection" value="${jdbc.c3p0.maxStatementsPerConnection}"/>
		<property name="numHelperThreads" value="${jdbc.c3p0.numHelperThreads}"/>
		<property name="testConnectionOnCheckout" value="${jdbc.c3p0.testConnectionOnCheckout}"/>
		<property name="user" value="${jdbc.dragon.username}"/>
		<property name="password" value="${jdbc.dragon.password}"/>
    </bean>
    
    <bean id="slotsDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.slots.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.slots.url}"/>
		<property name="acquireIncrement" value="${jdbc.c3p0.acquireIncrement}"/>
		<property name="acquireRetryAttempts" value="${jdbc.c3p0.acquireRetryAttempts}"/>
		<property name="acquireRetryDelay" value="${jdbc.c3p0.acquireRetryDelay}"/>
		<property name="autoCommitOnClose" value="${jdbc.c3p0.autoCommitOnClose}"/>
		<property name="breakAfterAcquireFailure" value="${jdbc.c3p0.breakAfterAcquireFailure}"/>
		<property name="idleConnectionTestPeriod" value="${jdbc.c3p0.idleConnectionTestPeriod}"/>
		<property name="maxIdleTime" value="${jdbc.c3p0.maxIdleTime}"/>
		<property name="checkoutTimeout" value="${jdbc.c3p0.checkoutTimeout}"/>
		<property name="initialPoolSize" value="${jdbc.c3p0.initialPoolSize}"/>
		<property name="maxPoolSize" value="${jdbc.c3p0.maxPoolSize}"/>
		<property name="maxStatements" value="${jdbc.c3p0.maxStatements}"/>
		<property name="maxStatementsPerConnection" value="${jdbc.c3p0.maxStatementsPerConnection}"/>
		<property name="numHelperThreads" value="${jdbc.c3p0.numHelperThreads}"/>
		<property name="testConnectionOnCheckout" value="${jdbc.c3p0.testConnectionOnCheckout}"/>
		<property name="user" value="${jdbc.slots.username}"/>
		<property name="password" value="${jdbc.slots.password}"/>
    </bean>
    
        
        <!-- SqlMap setup for iBATIS Database Layer -->
    <bean id="ngpSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:/sql-ngp-config.xml"/>
        <property name="dataSource" ref="ngpDataSource"/>
        <property name="lobHandler" ref="lobHandler"/>
    </bean>
    
    <!-- <bean id="userSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation" value="classpath:/sql-user-config.xml"/>
        <property name="dataSource" ref="userDataSource"/>
        <property name="lobHandler" ref="lobHandler"/>
    </bean> -->
    
    <bean id="cocSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocations">
        	<list>
        		<value>classpath:/sql-coc-config.xml</value>
        		<value>classpath:/sql-ngp-config.xml</value>
        	</list>
        </property>
        <property name="dataSource" ref="cocDataSource"/>
        <property name="lobHandler" ref="lobHandler"/>
    </bean>
    
    <bean id="dragonSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocations">
        	<list>
        		<value>classpath:/sql-dragon-config.xml</value>
        		<value>classpath:/sql-ngp-config.xml</value>
        	</list>
        </property>
        <property name="dataSource" ref="dragonDataSource"/>
        <property name="lobHandler" ref="lobHandler"/>
    </bean>
    
    <bean id="slotsSqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocations">
        	<list>
        		<value>classpath:/sql-slots-config.xml</value>
        		<value>classpath:/sql-ngp-config.xml</value>
        	</list>
        </property>
        <property name="dataSource" ref="slotsDataSource"/>
        <property name="lobHandler" ref="lobHandler"/>
    </bean>
    <!-- SqlMap setup for iBATIS Database Layer -->
    
    <!-- bean of sqlMapClient map -->
    <bean id="sqlMapClients" class="java.util.HashMap">  
        <constructor-arg>  
            <map>  
                <entry key="ngp">
                    <ref bean="ngpSqlMapClient" />
                </entry>
				<!-- <entry key="ngp_user">
					<ref bean="userSqlMapClient" />
				</entry> -->
                <entry key="coc">
                    <ref bean="cocSqlMapClient" />
                </entry>
                <entry key="dragon">
                    <ref bean="dragonSqlMapClient" />
                </entry>
                <entry key="slots">
                    <ref bean="slotsSqlMapClient" />
                </entry>
            </map>  
        </constructor-arg>  
    </bean>
    
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="ngpSqlMapClient"/>
    </bean>
    
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobFactory">
		    <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"/>
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	</bean>
    
    <task:scheduler id="myScheduler" pool-size="15"/>
    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="resolveTask" method="persistPromoCount" cron="0 0 15 * * ?" />
        <task:scheduled ref="resolveTask" method="refreshRobotForDragon" cron="0 0 0/3 * * ?" />  
        <task:scheduled ref="resolveTask" method="autoConfirmFriend" cron="0 0 0/1 * * ?" />
        <task:scheduled ref="resolveTask" method="printRedisSpecialKeys" cron="0 0/1 * * * ?" />
        <task:scheduled ref="resolveTask" method="cocKeepJob" cron="0 0 3 * * ?" />
        <task:scheduled ref="resolveTask" method="slotsKeepJob" cron="0 0 3 * * ?" />
    </task:scheduled-tasks>

</beans>
